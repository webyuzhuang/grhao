<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.fz</groupId>
  <artifactId>grhao</artifactId>
  <packaging>war</packaging>
  <version>1.0</version>
  <name>grhao</name>
  <url>http://maven.apache.org</url>

    <properties>
    <java-version>1.7</java-version>
    <org.slf4j-version>1.7.12</org.slf4j-version>
    <springframework-version>4.3.4.RELEASE</springframework-version>
    <aspectj.version>1.6.11</aspectj.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <maven.compiler.encoding>UTF-8</maven.compiler.encoding>
        <!--  MyBatis Generator  -->
        <!--  Java接口和实体类  -->
        <targetJavaProject>${basedir}/src/main/java</targetJavaProject>
        <!--接口路径-->
        <targetMapperPackage>com.fz.mapper</targetMapperPackage>
        <!--实体类路径-->
        <targetModelPackage>com.fz.model</targetModelPackage>
        <!--  XML生成路径  -->
        <targetResourcesProject>${basedir}/src/main/resources</targetResourcesProject>
        <targetXMLPackage>mapper</targetXMLPackage>
        <!--  依赖版本  -->
        <mapper.version>3.3.9</mapper.version>
        <mysql.version>5.1.29</mysql.version>
    </properties>
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>
      <!--web项目要导的三个包-->
      <dependency>
          <groupId>javax.servlet</groupId>
          <artifactId>javax.servlet-api</artifactId>
          <version>3.1.0</version>
          <scope>provided</scope>
      </dependency>
      <dependency>
          <groupId>javax.servlet.jsp</groupId>
          <artifactId>jsp-api</artifactId>
          <version>2.2</version>
          <scope>provided</scope>
      </dependency>
      <dependency>
          <groupId>javax.servlet</groupId>
          <artifactId>jstl</artifactId>
          <version>1.2</version>
      </dependency>
      <!--get set方法-->
      <dependency>
          <groupId>org.projectlombok</groupId>
          <artifactId>lombok</artifactId>
          <version>1.16.18</version>
      </dependency>
      <!--mysql数据库驱动包-->
      <dependency>
          <groupId>mysql</groupId>
          <artifactId>mysql-connector-java</artifactId>
          <version>5.1.43</version>
      </dependency>
      <!--专门连接mybatis和spring框架的-->
      <dependency>
          <groupId>org.mybatis</groupId>
          <artifactId>mybatis-spring</artifactId>
          <version>1.3.1</version>
      </dependency>
      <!--mybatis框架-->
      <dependency>
          <groupId>org.mybatis</groupId>
          <artifactId>mybatis</artifactId>
          <version>3.4.5</version>
      </dependency>
      <!--springmvc框架-->
      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-webmvc</artifactId>
          <version>4.3.10.RELEASE</version>
      </dependency>
      <!--spring框架-->
      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-context</artifactId>
          <version>4.3.10.RELEASE</version>
      </dependency>
      <!--spring框架连接数据库驱动包-->
      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-jdbc</artifactId>
          <version>4.3.10.RELEASE</version>
      </dependency>
      <!--包含支持缓存Cache（ehcache）、JCA、JMX、 邮件服务（Java Mail、COS Mail）、任务计划Scheduling（Timer、Quartz）方面的类。-->
      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-context-support</artifactId>
          <version>${springframework-version}</version>
      </dependency>

<!--spring事物依赖包-->
      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-tx</artifactId>
          <version>${springframework-version}</version>
      </dependency>


      <!-- springmvc 文件上传jar包 -->
      <dependency>
          <groupId>commons-fileupload</groupId>
          <artifactId>commons-fileupload</artifactId>
          <version>1.2.2</version>
      </dependency>
      <dependency>
          <groupId>commons-io</groupId>
          <artifactId>commons-io</artifactId>
          <version>2.0.1</version>
      </dependency>

      <dependency>
          <groupId>org.springframework.data</groupId>
          <artifactId>spring-data-redis</artifactId>
          <version>1.7.6.RELEASE</version>
      </dependency>

      <!-- 数据库连接池，导入dbcp的jar包，beans.xml中配置数据库   会导入两个包 -->
      <!--<dependency>-->
          <!--<groupId>commons-dbcp</groupId>-->
          <!--<artifactId>commons-dbcp</artifactId>-->
          <!--<version>1.4</version>-->
      <!--</dependency>-->
      <!--Spring框架下的单元测试方法-->
      <!--加上test的意思是在发行项目的时候没有，只有在测试时候有-->
      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-test</artifactId>
          <version>4.3.10.RELEASE</version>
          <scope>test</scope>
      </dependency>
      <!-- 使用阿里巴巴的数据库连接池druid -->
      <dependency>
          <groupId>com.alibaba</groupId>
          <artifactId>druid</artifactId>
          <version>1.1.3</version>
      </dependency>

      <!-- 用于动态加密的 -->
      <!--<dependency>-->
          <!--<groupId>commons-codec</groupId>-->
          <!--<artifactId>commons-codec</artifactId>-->
          <!--<version>1.10</version>-->
      <!--</dependency>-->
      <!--redis java客户端-->
      <dependency>
          <groupId>redis.clients</groupId>
          <artifactId>jedis</artifactId>
          <version>2.9.0</version>
      </dependency>
<!--java使用POI实现excel文件的读取-->
      <dependency>
          <groupId>org.apache.poi</groupId>
          <artifactId>poi</artifactId>
          <version>3.10-beta2</version>
      </dependency>
<!-- 使用Itext 进行PDf导出功能，文档之类的-->
      <dependency>
          <groupId>com.lowagie</groupId>
          <artifactId>itext</artifactId>
          <version>2.1.7</version>
      </dependency>

      <!--日志相关-->
      <dependency>
          <groupId>ch.qos.logback</groupId>
          <artifactId>logback-classic</artifactId>
          <version>1.1.3</version>
      </dependency>

      <dependency>
          <groupId>org.logback-extensions</groupId>
          <artifactId>logback-ext-spring</artifactId>
          <version>0.1.2</version>
      </dependency>

      <dependency>
          <groupId>org.slf4j</groupId>
          <artifactId>jcl-over-slf4j</artifactId>
          <version>1.7.12</version>
      </dependency>

      <!--xml与java object对象转换-->
      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-oxm</artifactId>
          <version>${springframework-version}</version>
      </dependency>

      <!--xml java对象转换-->
      <dependency>
          <groupId>com.thoughtworks.xstream</groupId>
          <artifactId>xstream</artifactId>
          <version>1.4.7</version>
      </dependency>
      <!--AOP-->
      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-aop</artifactId>
          <version>4.3.10.RELEASE</version>
      </dependency>

      <dependency>
          <groupId>org.aspectj</groupId>
          <artifactId>aspectjrt</artifactId>
          <version>${aspectj.version}</version>
      </dependency>

      <dependency>
          <groupId>org.aspectj</groupId>
          <artifactId>aspectjweaver</artifactId>
          <version>${aspectj.version}</version>
      </dependency>

      <dependency>
          <groupId>cglib</groupId>
          <artifactId>cglib-nodep</artifactId>
          <version>2.1_3</version>
      </dependency>
      <!-- Joda Time Library -->
      <dependency>
          <groupId>joda-time</groupId>
          <artifactId>joda-time</artifactId>
          <version>2.3</version>
      </dependency>

      <!--guava-->
      <dependency>
          <groupId>com.google.guava</groupId>
          <artifactId>guava</artifactId>
          <version>18.0</version>
      </dependency>

      <!--java 对象验证框架-->
      <dependency>
          <groupId>net.sf.oval</groupId>
          <artifactId>oval</artifactId>
          <version>1.31</version>
      </dependency>
      <!-- apache bean工具包 -->
      <dependency>
          <groupId>commons-beanutils</groupId>
          <artifactId>commons-beanutils</artifactId>
          <version>1.9.2</version>
      </dependency>

      <!--fastjson-->
      <dependency>
          <groupId>com.alibaba</groupId>
          <artifactId>fastjson</artifactId>
          <version>1.2.7</version>
      </dependency>

      <dependency>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-core</artifactId>
          <version>2.5.1</version>
      </dependency>

      <dependency>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-databind</artifactId>
          <version>2.5.1</version>
      </dependency>

      <dependency>
          <groupId>com.google.code.gson</groupId>
          <artifactId>gson</artifactId>
          <version>2.2.4</version>
      </dependency>

      <dependency>
          <groupId>com.github.pagehelper</groupId>
          <artifactId>pagehelper</artifactId>
          <version>4.1.6</version>
      </dependency>

      <dependency>
          <groupId>tk.mybatis</groupId>
          <artifactId>mapper</artifactId>
          <version>3.3.9</version>
      </dependency>
      <!--通用mapper api，也是必须要加的-->
      <dependency>
          <groupId>javax.persistence</groupId>
          <artifactId>persistence-api</artifactId>
          <version>1.0.2</version>
      </dependency>
      <!-- Servlet -->
      <dependency>
          <groupId>org.apache.tomcat</groupId>
          <artifactId>tomcat-servlet-api</artifactId>
          <version>7.0.30</version>
          <scope>provided</scope>
      </dependency>
      <dependency>
          <groupId>javax.servlet.jsp.jstl</groupId>
          <artifactId>jstl-api</artifactId>
          <version>1.2</version>
          <exclusions>
              <exclusion>
                  <groupId>javax.servlet</groupId>
                  <artifactId>servlet-api</artifactId>
              </exclusion>
          </exclusions>
      </dependency>
      <dependency>
          <groupId>org.glassfish.web</groupId>
          <artifactId>jstl-impl</artifactId>
          <version>1.2</version>
          <exclusions>
              <exclusion>
                  <groupId>javax.servlet</groupId>
                  <artifactId>servlet-api</artifactId>
              </exclusion>
          </exclusions>
      </dependency>




  </dependencies>
  <build>
      <finalName>${project.artifactId}</finalName>
      <testSourceDirectory>src/test/java</testSourceDirectory>
      <sourceDirectory>src/main/java</sourceDirectory>
      <!-- 处理无法加载资源配置文件 -->
      <resources>
          <resource>
          <directory>src/main/java</directory>
          <includes>
              <include>**/*.xml</include>
          </includes>
          </resource>
          <resource>
          <directory>src/main/resources</directory>
          <includes>
              <include>**/*.xml</include>
              <include>**/*.properties</include>
          </includes>
          </resource>

      </resources>
      <plugins>
          <!-- tomcat plugin   这个是为了配置maven服务器-->
          <plugin>
              <groupId>org.apache.tomcat.maven</groupId>
              <artifactId>tomcat7-maven-plugin</artifactId>
              <version>2.2</version>
              <configuration>
                  <url>http://localhost:80/manager/text</url> <!-- tomcat管理路径 -->
                  <server>tomcat7</server> <!-- 与settings.xml文件中Server的id相同 -->
                  <uriEncoding>utf-8</uriEncoding>
                  <port>80</port><!--服务器端口号80可以省去-->
                  <path>/</path> <!-- 应用的部署位置 -->
                  <contextReloadable>true</contextReloadable>
                  <systemProperties>
                      <java.util.logging.SimpleFormatter.format>[%4$s] %1$tF %1$tT %3$s %5$s %n</java.util.logging.SimpleFormatter.format>
                  </systemProperties>
              </configuration>
              <executions>
                  <execution>
                      <id>tomcat-run</id>
                      <phase>test</phase>
                      <goals>
                          <goal>run</goal>
                      </goals>
                  </execution>
              </executions>
          </plugin>
          <!--从ssm项目上考下来的两个plugin-->
          <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-compiler-plugin</artifactId>
              <version>3.3</version>
              <configuration>
                  <source>${java-version}</source>
                  <target>${java-version}</target>
                  <encoding>${project.build.sourceEncoding}</encoding>
              </configuration>
          </plugin>
          <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-surefire-plugin</artifactId>
              <version>2.12.4</version>
              <configuration>
                  <skipTests>true</skipTests>
              </configuration>
          </plugin>

          <!--下面这个配置是为了使用自动生成器，通用mapper-->
          <plugin>
              <groupId>org.mybatis.generator</groupId>
              <artifactId>mybatis-generator-maven-plugin</artifactId>
              <version>1.3.2</version>
              <configuration>
                  <configurationFile>${basedir}/src/main/resources/generatorConfig.xml</configurationFile>
                  <overwrite>true</overwrite>
                  <verbose>true</verbose>
              </configuration>
              <dependencies>
                  <dependency>
                      <groupId>mysql</groupId>
                      <artifactId>mysql-connector-java</artifactId>
                      <version>${mysql.version}</version>
                  </dependency>
                  <dependency>
                      <groupId>tk.mybatis</groupId>
                      <artifactId>mapper</artifactId>
                      <version>${mapper.version}</version>
                  </dependency>
              </dependencies>
          </plugin>
      </plugins>
  </build>
</project>
